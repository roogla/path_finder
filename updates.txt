U2.)
    # issue in path.py
    # function square_detection calls function change_list
    # all functionality can be moved to one or the other

U1.)
    # decision scoring improvements
    # logic currently decides based on lowest score index
    # score is calculated as:
    # [is_wall] + [distance_to_goal] + [past]
    # if [distance_to_goal} < 22 pixels set obj['cost'] = -1
    # *see B2*
    # want to score adjacent rects on creation of wall

B2.) --- fixed
    # Traceback (most recent call last):
    #  File "C:\Users\glass\Documents\aoc\path_finder\path_pygame.py", line 106, in <module>
    #    point_holder[0] = find_nine(point_holder[0], rect_list, point_holder)
    #  File "C:\Users\glass\Documents\aoc\path_finder\grid.py", line 80, in find_nine
    #    "box_seven": current_list[7]
    # IndexError: list index out of range

    # checks() definition -> "box_x": dict key is hard coded to grid
    # object current_list[x]. Where x represents a grib object that
    # DNE along the edge of the search path.

    >>> for checks dict in grid.py updated key "box_seven" to grab second to last
        list object from current_list instead of object hard-coding position.

B1.) --- fixed
    # current_pos object will bounce off target instead of choosing
    # target pos as cheapest option.